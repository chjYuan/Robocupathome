// Generated by gencpp from file from2Dto3D/PointBase.msg
// DO NOT EDIT!


#ifndef FROM2DTO3D_MESSAGE_POINTBASE_H
#define FROM2DTO3D_MESSAGE_POINTBASE_H

#include <ros/service_traits.h>


#include <from2Dto3D/PointBaseRequest.h>
#include <from2Dto3D/PointBaseResponse.h>


namespace from2Dto3D
{

struct PointBase
{

typedef PointBaseRequest Request;
typedef PointBaseResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct PointBase
} // namespace from2Dto3D


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::from2Dto3D::PointBase > {
  static const char* value()
  {
    return "e321e21d99d4287ba3c76f9676b55db5";
  }

  static const char* value(const ::from2Dto3D::PointBase&) { return value(); }
};

template<>
struct DataType< ::from2Dto3D::PointBase > {
  static const char* value()
  {
    return "from2Dto3D/PointBase";
  }

  static const char* value(const ::from2Dto3D::PointBase&) { return value(); }
};


// service_traits::MD5Sum< ::from2Dto3D::PointBaseRequest> should match 
// service_traits::MD5Sum< ::from2Dto3D::PointBase > 
template<>
struct MD5Sum< ::from2Dto3D::PointBaseRequest>
{
  static const char* value()
  {
    return MD5Sum< ::from2Dto3D::PointBase >::value();
  }
  static const char* value(const ::from2Dto3D::PointBaseRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::from2Dto3D::PointBaseRequest> should match 
// service_traits::DataType< ::from2Dto3D::PointBase > 
template<>
struct DataType< ::from2Dto3D::PointBaseRequest>
{
  static const char* value()
  {
    return DataType< ::from2Dto3D::PointBase >::value();
  }
  static const char* value(const ::from2Dto3D::PointBaseRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::from2Dto3D::PointBaseResponse> should match 
// service_traits::MD5Sum< ::from2Dto3D::PointBase > 
template<>
struct MD5Sum< ::from2Dto3D::PointBaseResponse>
{
  static const char* value()
  {
    return MD5Sum< ::from2Dto3D::PointBase >::value();
  }
  static const char* value(const ::from2Dto3D::PointBaseResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::from2Dto3D::PointBaseResponse> should match 
// service_traits::DataType< ::from2Dto3D::PointBase > 
template<>
struct DataType< ::from2Dto3D::PointBaseResponse>
{
  static const char* value()
  {
    return DataType< ::from2Dto3D::PointBase >::value();
  }
  static const char* value(const ::from2Dto3D::PointBaseResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FROM2DTO3D_MESSAGE_POINTBASE_H
